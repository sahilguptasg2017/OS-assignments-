This text files expalins the working of Question1:
(1) In this part, first we include all the necessary libraries such as <stdio.h>, <stdlib.h> ,<sys/types.h>,<unistd.h> and <sys/wait.h>
    Then , we defing the main function in which we take argc and char* argv[] as arguments.
    we then print the first statement (A) which gives us the parent's pid 
    now we store the parent's pid in the form of integer in the variable parent_pid
    we then call fork system call to create a new child of the process and store the child's pid in variable rc
    Now, we give 3 conditions to the , that is 
    if rc<0 , then no child is created because rc will be >0 for parent process (as child must have some pid) else it would be 0 for child process and child doesn't have any child(so it results in rc value of 0)
    So, to have the order of A,C,D,B  we make the parent wait for the child using the wait() system call
    So, the process goes into rc>0 condtion and is directed to the child's process that is when rc = 0 condition 
    Now, the child prints the statement C by valling getpid() function in it and then prints the statement D by the parent_pid value which we stored at the starting of the porgram 
    Now, the child process terminates(because it has ended) and now the parent process starts executing , now the process starts after the wait call 
    Now, the statement B is printed and we get the statements printed in the order A,C,D,B


(2-using vfork) In this part we first make the function which prints 










(Bonus part-using fork)